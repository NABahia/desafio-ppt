{"mappings":"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","sources":["<anon>","src/index.ts","src/components/button/index.ts","src/components/select/index.ts","node_modules/@parcel/runtime-js/lib/runtime-ddd804743c7a7c2f.js","node_modules/@parcel/runtime-js/lib/runtime-dfb2468eb6b97593.js","node_modules/@parcel/runtime-js/lib/runtime-418ade6763277dd4.js","src/state.ts","src/router.ts","src/pages/wellcome/index.ts","src/pages/instructions/index.ts","src/pages/game/index.ts","src/pages/result/index.ts"],"sourcesContent":["class $57ff401e9d06f8fc$var$CustomButton extends HTMLElement {\n    constructor(){\n        super();\n        this.render();\n    }\n    render() {\n        const shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        const button = document.createElement(\"button\");\n        const style = document.createElement(\"style\");\n        style.innerHTML = `\n      * {\n        box-sizing: border-box;\n      }\n      .button {\n        width: 100%;\n        font-family: \"Odibee Sans\", sans-serif;\n        font-weight: 400;\n        font-size: 45px;\n        letter-spacing: 5%;\n        font-weight: 400;\n        color: #D8FCFC ;\n        padding: 17px;\n        border: 10px solid #001997;\n        border-radius: 4px;\n        background-color: #006CFC;\n        color: white;\n        cursor: pointer;\n        text-align: center;\n      }\n      .button-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n    `;\n        button.textContent = this.getAttribute(\"label\") || \"Bot\\xf3n\";\n        button.className = \"button\";\n        const container = document.createElement(\"div\");\n        container.className = \"button-container\";\n        container.appendChild(button);\n        shadow.appendChild(container);\n        shadow.appendChild(style);\n    }\n}\ncustomElements.define(\"custom-button\", $57ff401e9d06f8fc$var$CustomButton);\n\n\nvar $bbb29355f553f667$exports = {};\n$bbb29355f553f667$exports = import.meta.resolve(\"7XUR4\");\n\n\nvar $1330bbc98ac707cd$exports = {};\n$1330bbc98ac707cd$exports = import.meta.resolve(\"2TFEB\");\n\n\nvar $ebb5d508a518d727$exports = {};\n$ebb5d508a518d727$exports = import.meta.resolve(\"dOk3L\");\n\n\nclass $75aa26ade4fa3c7b$var$HandSelect extends HTMLElement {\n    constructor(){\n        super(), this.shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        this.render();\n    }\n    render() {\n        this.shadow.innerHTML = `\n    <style>\n        .container {\n            position: relative;\n            width: 300px; /* Ajusta seg\\xfan dise\\xf1o */\n            height: 150px; /* Menor que la imagen para ocultar parte inferior */\n            overflow: hidden; /* Oculta la parte baja de las im\\xe1genes */\n            display: flex;\n            justify-content: center;\n            gap: 10px;\n        }\n        img {\n            width: 100px;\n            height: 131px;\n            cursor: pointer;\n            transition: transform 0.3s;\n            transform: translateY(50px); /* Inicia oculta debajo */\n        }\n        img.active {\n            transform: translateY(20px); /* Se levanta completamente */\n        }\n    </style>\n    <div class=\"container\">\n      <img src=\"${$bbb29355f553f667$exports}\" alt=\"Piedra\" class=\"hand\" data-type=\"piedra\">\n      <img src=\"${$1330bbc98ac707cd$exports}\" alt=\"Papel\" class=\"hand\" data-type=\"papel\">\n      <img src=\"${$ebb5d508a518d727$exports}\" alt=\"Tijera\" class=\"hand\" data-type=\"tijera\">\n    </div>\n    `;\n        const hands = this.shadow.querySelectorAll(\".hand\");\n        hands.forEach((hand)=>{\n            hand.addEventListener(\"click\", ()=>{\n                hands.forEach((h)=>h.classList.remove(\"active\"));\n                hand.classList.add(\"active\");\n            });\n        });\n    }\n}\ncustomElements.define(\"hand-select\", $75aa26ade4fa3c7b$var$HandSelect);\n\n\nconst $0b89d474933103bc$export$ca000e230c0caa3e = {\n    data: {\n        juego: {\n            miJugada: \"\",\n            pcJugada: \"\"\n        },\n        historial: [],\n        resultados: {\n            usuario: 0,\n            computadora: 0,\n            empate: 0\n        }\n    },\n    listeners: [],\n    setJugadaActual (juego) {\n        const currentState = this.getState();\n        const newState = {\n            ...currentState,\n            juego: juego\n        };\n        this.setState(newState);\n    },\n    ganador (juego) {\n        if (juego.miJugada === juego.pcJugada) return \"empate\";\n        if (juego.miJugada === \"papel\" && juego.pcJugada === \"piedra\" || juego.miJugada === \"piedra\" && juego.pcJugada === \"tijera\" || juego.miJugada === \"tijera\" && juego.pcJugada === \"papel\") return \"usuario\";\n        return \"computadora\";\n    },\n    agregarHistorial (juego) {\n        const currentState = this.getState();\n        const newHistorial = [\n            ...currentState.historial,\n            juego\n        ];\n        const newState = {\n            ...currentState,\n            historial: newHistorial\n        };\n        this.setState(newState);\n    },\n    agregarResultado (juego) {\n        const currentState = this.getState();\n        const nuevoGanador = this.ganador(juego);\n        const nuevoResultado = {\n            ...currentState.resultados\n        };\n        if (nuevoGanador === \"usuario\") nuevoResultado.usuario++;\n        else if (nuevoGanador === \"computadora\") nuevoResultado.computadora++;\n        else if (nuevoGanador === \"empate\") nuevoResultado.empate++;\n        const newState = {\n            ...currentState,\n            resultados: nuevoResultado\n        };\n        this.setState(newState);\n    },\n    init () {\n        const localData = localStorage.getItem(\"stateData\");\n        const parsedData = localData ? JSON.parse(localData) : {};\n        const newData = {\n            juego: parsedData.juego || {\n                miJugada: \"\",\n                pcJugada: \"\"\n            },\n            historial: parsedData.historial || [],\n            resultados: parsedData.resultados || {\n                usuario: 0,\n                computadora: 0,\n                empate: 0\n            }\n        };\n        console.log(\"Estado inicializado:\", newData);\n        this.setState(newData);\n        localStorage.setItem(\"stateData\", JSON.stringify(this.data));\n    },\n    getState () {\n        return this.data;\n    },\n    setState (newState) {\n        this.data = newState;\n        for (const cb of this.listeners)cb();\n        const stateData = JSON.stringify(this.data);\n        localStorage.setItem(\"stateData\", stateData);\n    },\n    subscribe (callback) {\n        this.listeners.push(callback);\n    }\n};\n\n\nfunction $2fb8f0afbcf6fad2$export$ff557045452c4961(params) {\n    const wellcomePage = document.createElement(\"div\");\n    const shadow = wellcomePage.attachShadow({\n        mode: \"open\"\n    });\n    shadow.innerHTML = `\n      <style>\n        * {\n            box-sizing: border-box;\n        }   \n        .h1{\n        font-family: \"American Typewriter\";\n        font-weight: 700;\n        font-size: 80px;\n        line-height: 88%;\n        letter-spacing: 0%;\n        color: #009048;\n        }\n        .o{\n        color: #91CCAF;\n        }\n        .contenedor{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        gap: 30px;\n        text-align: center;\n        width: 100vw;\n        height: 100vh;\n        }\n        .contenedor-texto{\n        width: 284px;\n        }\n        .contenedor-button{\n          width: 335px;\n        }\n        .select{\n        margin-top: 89px;\n        }\n      </style>\n      <div class= \"contenedor\">\n        <div class= \"contenedor-texto\">\n          <h1 class= \"h1\">Piedra Papel <span class= \"o\">\\xf3</span>Tijera</h1>\n        </div>\n        <div class= \"contenedor-button\">\n          <custom-button class= \"startButton\" label= \"Empezar\"></custom-button>\n        </div>\n        <hand-select class= \"select\"></hand-select>\n      </div>\n       `;\n    const startButton = shadow.querySelector(\".startButton\");\n    if (startButton) startButton.addEventListener(\"click\", ()=>{\n        params.goTo(\"/instrucciones\");\n    });\n    return wellcomePage;\n}\n\n\nfunction $1905f0a06a008413$export$6dbc706ed12c5118(params) {\n    const instructionsPage = document.createElement(\"div\");\n    const shadow = instructionsPage.attachShadow({\n        mode: \"open\"\n    });\n    shadow.innerHTML = `\n      <style>\n        * {\n            box-sizing: border-box;\n        }   \n        .h1{\n          font-family: American Typewriter;\n          font-weight: 600;\n          font-size: 40px;\n          line-height: 100%;\n          letter-spacing: 0%;\n          text-align: center;\n        }\n        .contenedor{\n         display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        gap: 30px;\n        text-align: center;\n        width: 100vw;\n        height: 100vh;\n        }\n        .contenedor-texto{\n          width: 284px;\n        }\n        .contenedor-button{\n          width: 335px;\n        }\n      </style>\n      <div class= \"contenedor\">\n        <div class= \"contenedor-texto\">\n          <h1 class= \"h1\">Presion\\xe1 jugar y eleg\\xed: piedra, papel o tijera antes de que pasen los 3 segundos.</h1>\n        </div>\n        <div class= \"contenedor-button\">\n          <custom-button class= \"playButton\" label= \"\\xa1Jugar!\"></custom-button>\n        </div>\n          <hand-select class= \"select\"></hand-select>\n      </div>\n       `;\n    const playButton = shadow.querySelector(\".playButton\");\n    if (playButton) playButton.addEventListener(\"click\", ()=>{\n        params.goTo(\"/juego\");\n    });\n    return instructionsPage;\n}\n\n\n\n\n\n\nfunction $433a441ce5feaa55$export$b8b10c7c42429e76(params) {\n    const gamePage = document.createElement(\"div\");\n    const shadow = gamePage.attachShadow({\n        mode: \"open\"\n    });\n    shadow.innerHTML = `\n    <style>\n      .contenedor {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        gap: 30px;\n        text-align: center;\n        width: 100vw;\n        height: 100vh;\n      }\n      .counter-container {\n        position: relative;\n        width: 240px;\n        height: 240px;\n      }\n      .counter {\n        font-size: 50px;\n        font-weight: bold;\n        color: #000000;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n      svg {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n      circle {\n        fill: none;\n        stroke: #000000;\n        stroke-width: 10;\n        stroke-dasharray: 283;\n        stroke-dashoffset: 283;\n        transition: stroke-dashoffset 1s linear;\n      }\n    </style>\n    <div class=\"contenedor\">\n      <div class=\"counter-container\">\n        <svg viewBox=\"0 0 100 100\">\n          <circle cx=\"50\" cy=\"50\" r=\"45\"></circle>\n        </svg>\n        <div class=\"counter\">3</div>\n      </div>\n      <hand-select></hand-select>\n    </div>\n  `;\n    const counterElement = shadow.querySelector(\".counter\");\n    const circleElement = shadow.querySelector(\"circle\");\n    const handSelectElement = shadow.querySelector(\"hand-select\");\n    let counter = 3;\n    const totalDash = 283;\n    // 🔹 Función de actualización con sincronización\n    const updateUI = ()=>{\n        if (circleElement) {\n            const progress = counter / 3 * totalDash;\n            circleElement.style.strokeDashoffset = progress.toString();\n        }\n        // Espera 900ms antes de actualizar el número para sincronizar con la animación\n        setTimeout(()=>{\n            if (counterElement) counterElement.textContent = counter.toString();\n        }, 900);\n    };\n    updateUI(); // ✅ Ejecuta la primera actualización antes del intervalo\n    // 🔹 **Iniciar el intervalo**\n    const interval = setInterval(()=>{\n        counter--;\n        updateUI(); // ✅ Ahora la UI se actualiza sincronizada con la animación\n        if (counter === 0 || handSelectElement?.shadowRoot?.querySelector(\".active\")) {\n            clearInterval(interval);\n            const selectedHand = handSelectElement?.shadowRoot?.querySelector(\".active\");\n            if (selectedHand) {\n                function getRandomIntInclusive(min, max) {\n                    min = Math.ceil(min);\n                    max = Math.floor(max);\n                    return Math.floor(Math.random() * (max - min + 1) + min);\n                }\n                const random = getRandomIntInclusive(1, 3);\n                const jugadas = {\n                    1: \"piedra\",\n                    2: \"papel\",\n                    3: \"tijera\"\n                };\n                const jugadaMaquina = jugadas[random];\n                const jugadaUsuario = selectedHand.getAttribute(\"data-type\");\n                const juego = {\n                    miJugada: jugadaUsuario,\n                    pcJugada: jugadaMaquina\n                };\n                if (juego) {\n                    (0, $0b89d474933103bc$export$ca000e230c0caa3e).setJugadaActual(juego);\n                    const currentState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n                    (0, $0b89d474933103bc$export$ca000e230c0caa3e).agregarHistorial(currentState.juego);\n                    (0, $0b89d474933103bc$export$ca000e230c0caa3e).agregarResultado(currentState.juego);\n                    renderResultado();\n                }\n                function renderResultado() {\n                    shadow.innerHTML = \"\";\n                    shadow.innerHTML = `\n          <style>\n            img{\n            display: none;\n            margin: 0 auto;\n            width: 170px;\n            }\n            .computerHand{\n              transform: rotate(180deg);\n            }\n            .separador{\n              height: 50px;\n            }\n          </style>\n          <div class= computadoraContainer>        \n            <img id= \"piedra\" src=\"${$bbb29355f553f667$exports}\" alt=\"Piedra\" class=\"computerHand\" data-type=\"piedra\">\n            <img id= \"papel\" src=\"${$1330bbc98ac707cd$exports}\" alt=\"Papel\" class=\"computerHand\" data-type=\"papel\">\n            <img id= \"tijera\" src=\"${$ebb5d508a518d727$exports}\" alt=\"Tijera\" class=\"computerHand\" data-type=\"tijera\">\n          </div>\n          <div class= separador>        \n          </div>\n          <div class= usuarioContainer>        \n            <img id= \"piedra\" src=\"${$bbb29355f553f667$exports}\" alt=\"Piedra\" class=\"userHand\" data-type=\"piedra\">\n            <img id= \"papel\" src=\"${$1330bbc98ac707cd$exports}\" alt=\"Papel\" class=\"userHand\" data-type=\"papel\">\n            <img id= \"tijera\" src=\"${$ebb5d508a518d727$exports}\" alt=\"Tijera\" class=\"userHand\" data-type=\"tijera\">\n          </div>\n          `;\n                    const userHands = shadow.querySelectorAll(\".userHand\");\n                    userHands.forEach((hand)=>{\n                        if (hand.id === jugadaUsuario) hand.style.display = \"block\";\n                    });\n                    const computerHands = shadow.querySelectorAll(\".computerHand\");\n                    computerHands.forEach((hand)=>{\n                        if (hand.id === jugadaMaquina) hand.style.display = \"block\";\n                    });\n                    console.log((0, $0b89d474933103bc$export$ca000e230c0caa3e).getState().juego);\n                }\n                setTimeout(()=>{\n                    params.goTo(\"/resultados\");\n                }, 1400);\n            } else setTimeout(()=>{\n                params.goTo(\"/instrucciones\");\n            }, 1200);\n        }\n    }, 1000);\n    return gamePage;\n}\n\n\n\nfunction $ed60d694131b3a0e$export$6fa3d555ef41ef22(params) {\n    const resultPage = document.createElement(\"div\");\n    const shadow = resultPage.attachShadow({\n        mode: \"open\"\n    });\n    const currentState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n    const ganador = (0, $0b89d474933103bc$export$ca000e230c0caa3e).ganador(currentState.juego);\n    const historialUsuario = currentState.resultados.usuario;\n    const historialComputadora = currentState.resultados.computadora;\n    const historialEmpate = currentState.resultados.empate;\n    let resultClass = \"\";\n    if (ganador === \"usuario\") resultClass = \"win\";\n    else if (ganador === \"computadora\") resultClass = \"lose\";\n    else resultClass = \"draw\";\n    shadow.innerHTML = `\n    <style>\n      * {\n        box-sizing: border-box;\n        }\n      .contenedor {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        gap: 30px;\n        text-align: center;\n        width: 100vw;\n        height: 100vh;\n        font-size: 30px;\n        font-weight: bold;\n      }\n      .win {\n        background-color: rgba(40, 167, 69, 0.7);\n        color: white;\n      }\n\n      .lose {\n        background-color: rgba(220, 53, 69, 0.7);\n        color: white;\n      }\n\n      .draw {\n        background-color: rgba(255, 193, 7, 0.7);\n        color: black;\n      }\n      .contenedor-historial{\n        width: 260px;\n        border: solid #000000 10px;\n        border-radius: 10px;\n        background-color: white;\n        padding: 30px;\n        opacity: 100%;\n      }\n\n      .score {\n        font-family: \"Odibee Sans\";\n        font-weight: 400;\n        font-size: 55px;\n        color: #000000;\n        text-allign: center;\n        margin: 0 auto;\n        line-height: 100%;\n        letter-spacing: 5%;  \n        vertical-align: middle;\n        margin-bottom: 15px;\n      }\n      .resultadoIndividual {\n        font-family: \"Odibee Sans\";\n        color: #000000;\n        font-weight: 400;\n        font-size: 45px;\n        text-align: end;\n        margin: 0 auto;\n        line-height: 100%;\n        letter-spacing: 5%;\n        vertical-align: middle;\n      }  \n      .contenedor-button{\n        width: 335px;\n        opacity:inherit;\n      }\n    </style>\n    <div class=\"contenedor ${resultClass}\">\n\n\n\n\n     <svg width=\"255\" height=\"260\" viewBox=\"0 0 255 260\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M144.299 45.8325L145.886 46.7163L147.669 46.3755L223.429 31.9126L209.258 109.523L208.946 111.236L209.764 112.772L246.729 182.162L170.214 192.357L168.429 192.594L167.206 193.917L114.278 251.091L81.2017 179.95L80.4517 178.337L78.853 177.56L9.08643 143.653L65.2231 89.3306L66.4849 88.1108L66.7065 86.3696L76.6724 8.17236L144.299 45.8325Z\" fill=          ${ganador === \"usuario\" ? \"#6CB46C\" : ganador === \"computadora\" ? \"#DC5B49\" : \"#c4c118\"} stroke=\"black\" stroke-width=\"10\"/>\n          <text x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\"\n          font-size=\"55px\" font-weight=\"400\" font-family=\"Odibee Sans\" fill=\"white\"\n          style=\"letter-spacing: 5%;\">\n          ${ganador === \"usuario\" ? \"\\xa1Ganaste!\" : ganador === \"computadora\" ? \"Perdiste\" : \"Empate\"}\n        </text>\n      </svg>\n\n\n\n\n      <div class= \"contenedor-historial\">\n      <h2 class= \"score\">Score</h2>\n      <div class= \"contenedor-historial2\">\n      <h3 class= \"resultadoIndividual\">Vos: ${historialUsuario}</h3>\n      <h3 class= \"resultadoIndividual\">Maquina: ${historialComputadora}</h3>\n      <h3 class= \"resultadoIndividual\">Empate: ${historialEmpate}</h3>\n      </div>\n      </div>\n      \n      \n      <div class= \"contenedor-button\">\n      <custom-button class= \"playAgainButton\" label= \"Volver a Jugar\"></custom-button>\n      </div>\n    </div>\n  `;\n    const playAgainButton = shadow.querySelector(\".playAgainButton\");\n    console.log(playAgainButton);\n    playAgainButton?.addEventListener(\"click\", ()=>{\n        params.goTo(\"/juego\");\n    });\n    return resultPage;\n}\n\n\nconst $e817d3341cf3ea9c$var$routes = [\n    {\n        path: /\\/wellcome/,\n        component: (0, $2fb8f0afbcf6fad2$export$ff557045452c4961)\n    },\n    {\n        path: /\\/instrucciones/,\n        component: (0, $1905f0a06a008413$export$6dbc706ed12c5118)\n    },\n    {\n        path: /\\/juego/,\n        component: (0, $433a441ce5feaa55$export$b8b10c7c42429e76)\n    },\n    {\n        path: /\\/resultado/,\n        component: (0, $ed60d694131b3a0e$export$6fa3d555ef41ef22)\n    }\n];\nconst $e817d3341cf3ea9c$var$BASE_PATH = \"/desafio-ppt/\";\nfunction $e817d3341cf3ea9c$var$isGithubPages() {\n    return location.host.includes(\"github.io\");\n}\nfunction $e817d3341cf3ea9c$export$cf7ee87ede64229c(container) {\n    function goTo(path) {\n        if (typeof path === \"string\") {\n            const completePath = $e817d3341cf3ea9c$var$isGithubPages() ? $e817d3341cf3ea9c$var$BASE_PATH + path : path;\n            history.pushState({}, \"\", completePath);\n            handleRoute(completePath);\n        } else console.error(\"La ruta debe ser un string:\", path);\n    }\n    function handleRoute(route) {\n        console.log(\"el handle route recibi\\xf3 una nueva ruta: \", route);\n        for (const r of $e817d3341cf3ea9c$var$routes)if (r.path.test(route)) {\n            container.dataset.currentRoute = route;\n            const el = r.component({\n                goTo: goTo\n            });\n            container.innerHTML = \"\";\n            container.appendChild(el);\n        }\n    }\n    if (location.pathname === \"/\") goTo(\"/wellcome\");\n    else handleRoute(location.pathname);\n    window.onpopstate = function() {\n        handleRoute(location.pathname);\n    };\n}\n\n\nfunction $b4e14b6b8da86996$var$main() {\n    (0, $0b89d474933103bc$export$ca000e230c0caa3e).init();\n    const root = document.querySelector(\".root\");\n    if (root) (0, $e817d3341cf3ea9c$export$cf7ee87ede64229c)(root);\n    else console.error(\"Error: No se encontr\\xf3 el elemento con la clase .root\");\n}\n$b4e14b6b8da86996$var$main();\n\n\n//# sourceMappingURL=ppt.7278275e.js.map\n","import \"./components/button\";\r\nimport \"./components/select\";\r\n\r\nimport { state } from \"./state.ts\";\r\nimport { initRouter } from \"./router.ts\";\r\n\r\nfunction main() {\r\n  state.init();\r\n\r\n  const root = document.querySelector(\".root\");\r\n\r\n  if (root) {\r\n    initRouter(root as HTMLElement);\r\n  } else {\r\n    console.error(\"Error: No se encontró el elemento con la clase .root\");\r\n  }\r\n}\r\n\r\nmain();\r\n","class CustomButton extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n    this.render();\r\n  }\r\n  render() {\r\n    const shadow = this.attachShadow({ mode: \"open\" });\r\n    const button = document.createElement(\"button\");\r\n    const style = document.createElement(\"style\");\r\n\r\n    style.innerHTML = `\r\n      * {\r\n        box-sizing: border-box;\r\n      }\r\n      .button {\r\n        width: 100%;\r\n        font-family: \"Odibee Sans\", sans-serif;\r\n        font-weight: 400;\r\n        font-size: 45px;\r\n        letter-spacing: 5%;\r\n        font-weight: 400;\r\n        color: #D8FCFC ;\r\n        padding: 17px;\r\n        border: 10px solid #001997;\r\n        border-radius: 4px;\r\n        background-color: #006CFC;\r\n        color: white;\r\n        cursor: pointer;\r\n        text-align: center;\r\n      }\r\n      .button-container {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n    `;\r\n\r\n    button.textContent = this.getAttribute(\"label\") || \"Botón\";\r\n    button.className = \"button\";\r\n\r\n    const container = document.createElement(\"div\");\r\n    container.className = \"button-container\";\r\n    container.appendChild(button);\r\n\r\n    shadow.appendChild(container);\r\n    shadow.appendChild(style);\r\n  }\r\n}\r\n\r\ncustomElements.define(\"custom-button\", CustomButton);\r\n","const piedraImg = require(\"url:../../../public/assets/piedra.svg\");\r\nconst papelImg = require(\"url:../../../public/assets/papel.svg\");\r\nconst tijeraImg = require(\"url:../../../public/assets/tijera.svg\");\r\n\r\nclass HandSelect extends HTMLElement {\r\n  shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n  constructor() {\r\n    super();\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.shadow.innerHTML = `\r\n    <style>\r\n        .container {\r\n            position: relative;\r\n            width: 300px; /* Ajusta según diseño */\r\n            height: 150px; /* Menor que la imagen para ocultar parte inferior */\r\n            overflow: hidden; /* Oculta la parte baja de las imágenes */\r\n            display: flex;\r\n            justify-content: center;\r\n            gap: 10px;\r\n        }\r\n        img {\r\n            width: 100px;\r\n            height: 131px;\r\n            cursor: pointer;\r\n            transition: transform 0.3s;\r\n            transform: translateY(50px); /* Inicia oculta debajo */\r\n        }\r\n        img.active {\r\n            transform: translateY(20px); /* Se levanta completamente */\r\n        }\r\n    </style>\r\n    <div class=\"container\">\r\n      <img src=\"${piedraImg}\" alt=\"Piedra\" class=\"hand\" data-type=\"piedra\">\r\n      <img src=\"${papelImg}\" alt=\"Papel\" class=\"hand\" data-type=\"papel\">\r\n      <img src=\"${tijeraImg}\" alt=\"Tijera\" class=\"hand\" data-type=\"tijera\">\r\n    </div>\r\n    `;\r\n\r\n    const hands = this.shadow.querySelectorAll(\".hand\");\r\n    hands.forEach((hand) => {\r\n      hand.addEventListener(\"click\", () => {\r\n        hands.forEach((h) => h.classList.remove(\"active\"));\r\n        hand.classList.add(\"active\");\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\ncustomElements.define(\"hand-select\", HandSelect);\r\n","module.exports = __parcel__import__.meta.resolve(\"7XUR4\");","module.exports = __parcel__import__.meta.resolve(\"2TFEB\");","module.exports = __parcel__import__.meta.resolve(\"dOk3L\");","type Jugada = \"piedra\" | \"papel\" | \"tijera\";\r\ntype Juego = { miJugada: Jugada; pcJugada: Jugada };\r\ntype StateData = {\r\n  juego: Juego;\r\n  historial: Juego[];\r\n  resultados: {\r\n    usuario: 0;\r\n    computadora: 0;\r\n    empate: 0;\r\n  };\r\n};\r\n\r\nconst state = {\r\n  data: {\r\n    juego: { miJugada: \"\" as Jugada, pcJugada: \"\" as Jugada },\r\n    historial: [] as Juego[],\r\n    resultados: {\r\n      usuario: 0,\r\n      computadora: 0,\r\n      empate: 0,\r\n    },\r\n  },\r\n  listeners: [] as Array<() => void>,\r\n\r\n  setJugadaActual(juego) {\r\n    const currentState = this.getState();\r\n    const newState = {\r\n      ...currentState,\r\n      juego: juego,\r\n    };\r\n    this.setState(newState);\r\n  },\r\n\r\n  ganador(juego: Juego) {\r\n    if (juego.miJugada === juego.pcJugada) {\r\n      return \"empate\";\r\n    }\r\n    if (\r\n      (juego.miJugada === \"papel\" && juego.pcJugada === \"piedra\") ||\r\n      (juego.miJugada === \"piedra\" && juego.pcJugada === \"tijera\") ||\r\n      (juego.miJugada === \"tijera\" && juego.pcJugada === \"papel\")\r\n    ) {\r\n      return \"usuario\";\r\n    }\r\n    return \"computadora\";\r\n  },\r\n\r\n  agregarHistorial(juego: Juego) {\r\n    const currentState = this.getState();\r\n\r\n    const newHistorial = [...currentState.historial, juego];\r\n    const newState = {\r\n      ...currentState,\r\n      historial: newHistorial,\r\n    };\r\n    this.setState(newState);\r\n  },\r\n\r\n  agregarResultado(juego: Juego) {\r\n    const currentState = this.getState();\r\n\r\n    const nuevoGanador = this.ganador(juego);\r\n    const nuevoResultado = { ...currentState.resultados };\r\n\r\n    if (nuevoGanador === \"usuario\") {\r\n      nuevoResultado.usuario++;\r\n    } else if (nuevoGanador === \"computadora\") {\r\n      nuevoResultado.computadora++;\r\n    } else if (nuevoGanador === \"empate\") {\r\n      nuevoResultado.empate++;\r\n    }\r\n\r\n    const newState = {\r\n      ...currentState,\r\n      resultados: nuevoResultado,\r\n    };\r\n    this.setState(newState);\r\n  },\r\n\r\n  init() {\r\n    const localData = localStorage.getItem(\"stateData\");\r\n    const parsedData = localData ? JSON.parse(localData) : {};\r\n\r\n    const newData: StateData = {\r\n      juego: parsedData.juego || {\r\n        miJugada: \"\" as Jugada,\r\n        pcJugada: \"\" as Jugada,\r\n      },\r\n      historial: parsedData.historial || [],\r\n      resultados: parsedData.resultados || {\r\n        usuario: 0,\r\n        computadora: 0,\r\n        empate: 0,\r\n      },\r\n    };\r\n\r\n    console.log(\"Estado inicializado:\", newData);\r\n    this.setState(newData);\r\n    localStorage.setItem(\"stateData\", JSON.stringify(this.data));\r\n  },\r\n\r\n  getState() {\r\n    return this.data;\r\n  },\r\n\r\n  setState(newState) {\r\n    this.data = newState;\r\n    for (const cb of this.listeners) {\r\n      cb();\r\n    }\r\n    const stateData = JSON.stringify(this.data);\r\n    localStorage.setItem(\"stateData\", stateData);\r\n  },\r\n\r\n  subscribe(callback: (any) => any) {\r\n    this.listeners.push(callback);\r\n  },\r\n};\r\n\r\nexport { state, Juego, Jugada };\r\n","import { initWellcome } from \"./pages/wellcome\";\r\nimport { initInstructions } from \"./pages/instructions\";\r\nimport { initGame } from \"./pages/game\";\r\nimport { initResult } from \"./pages/result\";\r\n\r\nconst routes = [\r\n  { path: /\\/wellcome/, component: initWellcome },\r\n  { path: /\\/instrucciones/, component: initInstructions },\r\n  { path: /\\/juego/, component: initGame },\r\n  { path: /\\/resultado/, component: initResult },\r\n];\r\n\r\nconst BASE_PATH = \"/desafio-ppt/\";\r\n\r\nfunction isGithubPages() {\r\n  return location.host.includes(\"github.io\");\r\n}\r\n\r\nexport function initRouter(container: HTMLElement) {\r\n  function goTo(path) {\r\n    if (typeof path === \"string\") {\r\n      const completePath = isGithubPages() ? BASE_PATH + path : path;\r\n      history.pushState({}, \"\", completePath);\r\n      handleRoute(completePath);\r\n    } else {\r\n      console.error(\"La ruta debe ser un string:\", path);\r\n    }\r\n  }\r\n\r\n  function handleRoute(route) {\r\n    console.log(\"el handle route recibió una nueva ruta: \", route);\r\n\r\n    for (const r of routes) {\r\n      if (r.path.test(route)) {\r\n        container.dataset.currentRoute = route;\r\n        const el = r.component({ goTo: goTo });\r\n        container.innerHTML = \"\";\r\n        container.appendChild(el);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (location.pathname === \"/\") {\r\n    goTo(\"/wellcome\");\r\n  } else {\r\n    handleRoute(location.pathname);\r\n  }\r\n\r\n  window.onpopstate = function () {\r\n    handleRoute(location.pathname);\r\n  };\r\n}\r\n","export function initWellcome(params) {\r\n  const wellcomePage = document.createElement(\"div\");\r\n  const shadow = wellcomePage.attachShadow({ mode: \"open\" });\r\n\r\n  shadow.innerHTML = `\r\n      <style>\r\n        * {\r\n            box-sizing: border-box;\r\n        }   \r\n        .h1{\r\n        font-family: \"American Typewriter\";\r\n        font-weight: 700;\r\n        font-size: 80px;\r\n        line-height: 88%;\r\n        letter-spacing: 0%;\r\n        color: #009048;\r\n        }\r\n        .o{\r\n        color: #91CCAF;\r\n        }\r\n        .contenedor{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 30px;\r\n        text-align: center;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        }\r\n        .contenedor-texto{\r\n        width: 284px;\r\n        }\r\n        .contenedor-button{\r\n          width: 335px;\r\n        }\r\n        .select{\r\n        margin-top: 89px;\r\n        }\r\n      </style>\r\n      <div class= \"contenedor\">\r\n        <div class= \"contenedor-texto\">\r\n          <h1 class= \"h1\">Piedra Papel <span class= \"o\">ó</span>Tijera</h1>\r\n        </div>\r\n        <div class= \"contenedor-button\">\r\n          <custom-button class= \"startButton\" label= \"Empezar\"></custom-button>\r\n        </div>\r\n        <hand-select class= \"select\"></hand-select>\r\n      </div>\r\n       `;\r\n\r\n  const startButton = shadow.querySelector(\".startButton\");\r\n\r\n  if (startButton) {\r\n    startButton.addEventListener(\"click\", () => {\r\n      params.goTo(\"/instrucciones\");\r\n    });\r\n  }\r\n\r\n  return wellcomePage;\r\n}\r\n","export function initInstructions(params) {\r\n  const instructionsPage = document.createElement(\"div\");\r\n  const shadow = instructionsPage.attachShadow({ mode: \"open\" });\r\n\r\n  shadow.innerHTML = `\r\n      <style>\r\n        * {\r\n            box-sizing: border-box;\r\n        }   \r\n        .h1{\r\n          font-family: American Typewriter;\r\n          font-weight: 600;\r\n          font-size: 40px;\r\n          line-height: 100%;\r\n          letter-spacing: 0%;\r\n          text-align: center;\r\n        }\r\n        .contenedor{\r\n         display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 30px;\r\n        text-align: center;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        }\r\n        .contenedor-texto{\r\n          width: 284px;\r\n        }\r\n        .contenedor-button{\r\n          width: 335px;\r\n        }\r\n      </style>\r\n      <div class= \"contenedor\">\r\n        <div class= \"contenedor-texto\">\r\n          <h1 class= \"h1\">Presioná jugar y elegí: piedra, papel o tijera antes de que pasen los 3 segundos.</h1>\r\n        </div>\r\n        <div class= \"contenedor-button\">\r\n          <custom-button class= \"playButton\" label= \"¡Jugar!\"></custom-button>\r\n        </div>\r\n          <hand-select class= \"select\"></hand-select>\r\n      </div>\r\n       `;\r\n\r\n  const playButton = shadow.querySelector(\".playButton\");\r\n\r\n  if (playButton) {\r\n    playButton.addEventListener(\"click\", () => {\r\n      params.goTo(\"/juego\");\r\n    });\r\n  }\r\n\r\n  return instructionsPage;\r\n}\r\n","import { state, Juego, Jugada } from \"../../state\";\r\n\r\nconst piedraImg = require(\"url:../../../public/assets/piedra.svg\");\r\nconst papelImg = require(\"url:../../../public/assets/papel.svg\");\r\nconst tijeraImg = require(\"url:../../../public/assets/tijera.svg\");\r\n\r\nexport function initGame(params) {\r\n  const gamePage = document.createElement(\"div\");\r\n  const shadow = gamePage.attachShadow({ mode: \"open\" });\r\n\r\n  shadow.innerHTML = `\r\n    <style>\r\n      .contenedor {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 30px;\r\n        text-align: center;\r\n        width: 100vw;\r\n        height: 100vh;\r\n      }\r\n      .counter-container {\r\n        position: relative;\r\n        width: 240px;\r\n        height: 240px;\r\n      }\r\n      .counter {\r\n        font-size: 50px;\r\n        font-weight: bold;\r\n        color: #000000;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n      }\r\n      svg {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      circle {\r\n        fill: none;\r\n        stroke: #000000;\r\n        stroke-width: 10;\r\n        stroke-dasharray: 283;\r\n        stroke-dashoffset: 283;\r\n        transition: stroke-dashoffset 1s linear;\r\n      }\r\n    </style>\r\n    <div class=\"contenedor\">\r\n      <div class=\"counter-container\">\r\n        <svg viewBox=\"0 0 100 100\">\r\n          <circle cx=\"50\" cy=\"50\" r=\"45\"></circle>\r\n        </svg>\r\n        <div class=\"counter\">3</div>\r\n      </div>\r\n      <hand-select></hand-select>\r\n    </div>\r\n  `;\r\n\r\n  const counterElement = shadow.querySelector(\".counter\");\r\n  const circleElement = shadow.querySelector(\"circle\");\r\n  const handSelectElement = shadow.querySelector(\"hand-select\");\r\n  let counter = 3;\r\n  const totalDash = 283;\r\n\r\n  // 🔹 Función de actualización con sincronización\r\n  const updateUI = () => {\r\n    if (circleElement) {\r\n      const progress = (counter / 3) * totalDash;\r\n      circleElement.style.strokeDashoffset = progress.toString();\r\n    }\r\n\r\n    // Espera 900ms antes de actualizar el número para sincronizar con la animación\r\n    setTimeout(() => {\r\n      if (counterElement) {\r\n        counterElement.textContent = counter.toString();\r\n      }\r\n    }, 900);\r\n  };\r\n\r\n  updateUI(); // ✅ Ejecuta la primera actualización antes del intervalo\r\n\r\n  // 🔹 **Iniciar el intervalo**\r\n  const interval = setInterval(() => {\r\n    counter--;\r\n    updateUI(); // ✅ Ahora la UI se actualiza sincronizada con la animación\r\n\r\n    if (\r\n      counter === 0 ||\r\n      handSelectElement?.shadowRoot?.querySelector(\".active\")\r\n    ) {\r\n      clearInterval(interval);\r\n\r\n      const selectedHand =\r\n        handSelectElement?.shadowRoot?.querySelector(\".active\");\r\n      if (selectedHand) {\r\n        function getRandomIntInclusive(min, max) {\r\n          min = Math.ceil(min);\r\n          max = Math.floor(max);\r\n          return Math.floor(Math.random() * (max - min + 1) + min);\r\n        }\r\n        const random = getRandomIntInclusive(1, 3);\r\n\r\n        const jugadas = {\r\n          1: \"piedra\",\r\n          2: \"papel\",\r\n          3: \"tijera\",\r\n        };\r\n\r\n        const jugadaMaquina = jugadas[random];\r\n        const jugadaUsuario = selectedHand.getAttribute(\"data-type\");\r\n\r\n        const juego = { miJugada: jugadaUsuario, pcJugada: jugadaMaquina };\r\n\r\n        if (juego) {\r\n          state.setJugadaActual(juego);\r\n\r\n          const currentState = state.getState();\r\n\r\n          state.agregarHistorial(currentState.juego);\r\n          state.agregarResultado(currentState.juego);\r\n          renderResultado();\r\n        }\r\n\r\n        function renderResultado() {\r\n          shadow.innerHTML = \"\";\r\n          shadow.innerHTML = `\r\n          <style>\r\n            img{\r\n            display: none;\r\n            margin: 0 auto;\r\n            width: 170px;\r\n            }\r\n            .computerHand{\r\n              transform: rotate(180deg);\r\n            }\r\n            .separador{\r\n              height: 50px;\r\n            }\r\n          </style>\r\n          <div class= computadoraContainer>        \r\n            <img id= \"piedra\" src=\"${piedraImg}\" alt=\"Piedra\" class=\"computerHand\" data-type=\"piedra\">\r\n            <img id= \"papel\" src=\"${papelImg}\" alt=\"Papel\" class=\"computerHand\" data-type=\"papel\">\r\n            <img id= \"tijera\" src=\"${tijeraImg}\" alt=\"Tijera\" class=\"computerHand\" data-type=\"tijera\">\r\n          </div>\r\n          <div class= separador>        \r\n          </div>\r\n          <div class= usuarioContainer>        \r\n            <img id= \"piedra\" src=\"${piedraImg}\" alt=\"Piedra\" class=\"userHand\" data-type=\"piedra\">\r\n            <img id= \"papel\" src=\"${papelImg}\" alt=\"Papel\" class=\"userHand\" data-type=\"papel\">\r\n            <img id= \"tijera\" src=\"${tijeraImg}\" alt=\"Tijera\" class=\"userHand\" data-type=\"tijera\">\r\n          </div>\r\n          `;\r\n          const userHands = shadow.querySelectorAll(\".userHand\");\r\n          userHands.forEach((hand) => {\r\n            if (hand.id === jugadaUsuario) {\r\n              hand.style.display = \"block\";\r\n            }\r\n          });\r\n\r\n          const computerHands = shadow.querySelectorAll(\".computerHand\");\r\n          computerHands.forEach((hand) => {\r\n            if (hand.id === jugadaMaquina) {\r\n              hand.style.display = \"block\";\r\n            }\r\n          });\r\n\r\n          console.log(state.getState().juego);\r\n        }\r\n\r\n        setTimeout(() => {\r\n          params.goTo(\"/resultados\");\r\n        }, 1400);\r\n      } else {\r\n        setTimeout(() => {\r\n          params.goTo(\"/instrucciones\");\r\n        }, 1200);\r\n      }\r\n    }\r\n  }, 1000);\r\n\r\n  return gamePage;\r\n}\r\n","import { state } from \"../../state\";\r\n\r\nexport function initResult(params) {\r\n  const resultPage = document.createElement(\"div\");\r\n  const shadow = resultPage.attachShadow({ mode: \"open\" });\r\n\r\n  const currentState = state.getState();\r\n  const ganador = state.ganador(currentState.juego);\r\n  const historialUsuario = currentState.resultados.usuario;\r\n  const historialComputadora = currentState.resultados.computadora;\r\n  const historialEmpate = currentState.resultados.empate;\r\n\r\n  let resultClass = \"\";\r\n\r\n  if (ganador === \"usuario\") {\r\n    resultClass = \"win\";\r\n  } else if (ganador === \"computadora\") {\r\n    resultClass = \"lose\";\r\n  } else {\r\n    resultClass = \"draw\";\r\n  }\r\n\r\n  shadow.innerHTML = `\r\n    <style>\r\n      * {\r\n        box-sizing: border-box;\r\n        }\r\n      .contenedor {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 30px;\r\n        text-align: center;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        font-size: 30px;\r\n        font-weight: bold;\r\n      }\r\n      .win {\r\n        background-color: rgba(40, 167, 69, 0.7);\r\n        color: white;\r\n      }\r\n\r\n      .lose {\r\n        background-color: rgba(220, 53, 69, 0.7);\r\n        color: white;\r\n      }\r\n\r\n      .draw {\r\n        background-color: rgba(255, 193, 7, 0.7);\r\n        color: black;\r\n      }\r\n      .contenedor-historial{\r\n        width: 260px;\r\n        border: solid #000000 10px;\r\n        border-radius: 10px;\r\n        background-color: white;\r\n        padding: 30px;\r\n        opacity: 100%;\r\n      }\r\n\r\n      .score {\r\n        font-family: \"Odibee Sans\";\r\n        font-weight: 400;\r\n        font-size: 55px;\r\n        color: #000000;\r\n        text-allign: center;\r\n        margin: 0 auto;\r\n        line-height: 100%;\r\n        letter-spacing: 5%;  \r\n        vertical-align: middle;\r\n        margin-bottom: 15px;\r\n      }\r\n      .resultadoIndividual {\r\n        font-family: \"Odibee Sans\";\r\n        color: #000000;\r\n        font-weight: 400;\r\n        font-size: 45px;\r\n        text-align: end;\r\n        margin: 0 auto;\r\n        line-height: 100%;\r\n        letter-spacing: 5%;\r\n        vertical-align: middle;\r\n      }  \r\n      .contenedor-button{\r\n        width: 335px;\r\n        opacity:inherit;\r\n      }\r\n    </style>\r\n    <div class=\"contenedor ${resultClass}\">\r\n\r\n\r\n\r\n\r\n     <svg width=\"255\" height=\"260\" viewBox=\"0 0 255 260\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M144.299 45.8325L145.886 46.7163L147.669 46.3755L223.429 31.9126L209.258 109.523L208.946 111.236L209.764 112.772L246.729 182.162L170.214 192.357L168.429 192.594L167.206 193.917L114.278 251.091L81.2017 179.95L80.4517 178.337L78.853 177.56L9.08643 143.653L65.2231 89.3306L66.4849 88.1108L66.7065 86.3696L76.6724 8.17236L144.299 45.8325Z\" fill=          ${\r\n          ganador === \"usuario\"\r\n            ? \"#6CB46C\"\r\n            : ganador === \"computadora\"\r\n            ? \"#DC5B49\"\r\n            : \"#c4c118\"\r\n        } stroke=\"black\" stroke-width=\"10\"/>\r\n          <text x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\"\r\n          font-size=\"55px\" font-weight=\"400\" font-family=\"Odibee Sans\" fill=\"white\"\r\n          style=\"letter-spacing: 5%;\">\r\n          ${\r\n            ganador === \"usuario\"\r\n              ? \"¡Ganaste!\"\r\n              : ganador === \"computadora\"\r\n              ? \"Perdiste\"\r\n              : \"Empate\"\r\n          }\r\n        </text>\r\n      </svg>\r\n\r\n\r\n\r\n\r\n      <div class= \"contenedor-historial\">\r\n      <h2 class= \"score\">Score</h2>\r\n      <div class= \"contenedor-historial2\">\r\n      <h3 class= \"resultadoIndividual\">Vos: ${historialUsuario}</h3>\r\n      <h3 class= \"resultadoIndividual\">Maquina: ${historialComputadora}</h3>\r\n      <h3 class= \"resultadoIndividual\">Empate: ${historialEmpate}</h3>\r\n      </div>\r\n      </div>\r\n      \r\n      \r\n      <div class= \"contenedor-button\">\r\n      <custom-button class= \"playAgainButton\" label= \"Volver a Jugar\"></custom-button>\r\n      </div>\r\n    </div>\r\n  `;\r\n  const playAgainButton = shadow.querySelector(\".playAgainButton\");\r\n\r\n  console.log(playAgainButton);\r\n  playAgainButton?.addEventListener(\"click\", () => {\r\n    params.goTo(\"/juego\");\r\n  });\r\n\r\n  return resultPage;\r\n}\r\n"],"names":["$57ff401e9d06f8fc$var$CustomButton","HTMLElement","constructor","render","shadow","attachShadow","mode","button","document","createElement","style","innerHTML","textContent","getAttribute","className","container","appendChild","customElements","define","$bbb29355f553f667$exports","resolve","$1330bbc98ac707cd$exports","$ebb5d508a518d727$exports","$75aa26ade4fa3c7b$var$HandSelect","hands","querySelectorAll","forEach","hand","addEventListener","h","classList","remove","add","$0b89d474933103bc$export$ca000e230c0caa3e","data","juego","miJugada","pcJugada","historial","resultados","usuario","computadora","empate","listeners","setJugadaActual","newState","getState","setState","ganador","agregarHistorial","currentState","newHistorial","agregarResultado","nuevoGanador","nuevoResultado","init","localData","localStorage","getItem","parsedData","JSON","parse","newData","console","log","setItem","stringify","cb","stateData","subscribe","callback","push","$e817d3341cf3ea9c$var$routes","path","component","params","wellcomePage","startButton","querySelector","goTo","instructionsPage","playButton","gamePage","counterElement","circleElement","handSelectElement","counter","updateUI","progress","strokeDashoffset","toString","setTimeout","interval","setInterval","shadowRoot","clearInterval","selectedHand","min","max","jugadaMaquina","jugadas","Math","ceil","floor","random","jugadaUsuario","userHands","id","display","computerHands","resultPage","historialUsuario","historialComputadora","historialEmpate","resultClass","playAgainButton","root","completePath","$e817d3341cf3ea9c$var$isGithubPages","location","host","includes","$e817d3341cf3ea9c$var$BASE_PATH","history","pushState","handleRoute","error","route","r","test","dataset","currentRoute","el","pathname","window","onpopstate"],"version":3,"file":"ppt.7278275e.js.map"}